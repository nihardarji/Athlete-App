[{"/Users/nihardarji/Desktop/Athlete-App/client/src/index.js":"1","/Users/nihardarji/Desktop/Athlete-App/client/src/reportWebVitals.js":"2","/Users/nihardarji/Desktop/Athlete-App/client/src/App.js":"3","/Users/nihardarji/Desktop/Athlete-App/client/src/store.js":"4","/Users/nihardarji/Desktop/Athlete-App/client/src/components/Home.js":"5","/Users/nihardarji/Desktop/Athlete-App/client/src/components/AthleteDetails.js":"6","/Users/nihardarji/Desktop/Athlete-App/client/src/components/AthletesList.js":"7","/Users/nihardarji/Desktop/Athlete-App/client/src/components/AddAthlete.js":"8","/Users/nihardarji/Desktop/Athlete-App/client/src/actions/athleteActions.js":"9","/Users/nihardarji/Desktop/Athlete-App/client/src/reducers/index.js":"10","/Users/nihardarji/Desktop/Athlete-App/client/src/components/AthleteForm.js":"11","/Users/nihardarji/Desktop/Athlete-App/client/src/components/AthleteItem.js":"12","/Users/nihardarji/Desktop/Athlete-App/client/src/actions/types.js":"13","/Users/nihardarji/Desktop/Athlete-App/client/src/reducers/athleteReducer.js":"14","/Users/nihardarji/Desktop/Athlete-App/client/src/components/Summary.js":"15","/Users/nihardarji/Desktop/Athlete-App/client/src/components/About.js":"16","/Users/nihardarji/Desktop/Athlete-App/client/src/components/BasicInformation.js":"17","/Users/nihardarji/Desktop/Athlete-App/client/src/utils/Sports.js":"18"},{"size":478,"mtime":1610166497977,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1610166262735,"results":"21","hashOfConfig":"20"},{"size":243,"mtime":1610177627585,"results":"22","hashOfConfig":"20"},{"size":366,"mtime":1610166596795,"results":"23","hashOfConfig":"20"},{"size":1729,"mtime":1610177571747,"results":"24","hashOfConfig":"20"},{"size":3899,"mtime":1610177527650,"results":"25","hashOfConfig":"20"},{"size":527,"mtime":1610177420302,"results":"26","hashOfConfig":"20"},{"size":772,"mtime":1610177541871,"results":"27","hashOfConfig":"20"},{"size":1584,"mtime":1610173301076,"results":"28","hashOfConfig":"20"},{"size":151,"mtime":1610166656453,"results":"29","hashOfConfig":"20"},{"size":4560,"mtime":1610178339781,"results":"30","hashOfConfig":"20"},{"size":2783,"mtime":1610177336484,"results":"31","hashOfConfig":"20"},{"size":172,"mtime":1610166639131,"results":"32","hashOfConfig":"20"},{"size":971,"mtime":1610173734182,"results":"33","hashOfConfig":"20"},{"size":1350,"mtime":1610166647187,"results":"34","hashOfConfig":"20"},{"size":1435,"mtime":1610177556419,"results":"35","hashOfConfig":"20"},{"size":3861,"mtime":1610177816022,"results":"36","hashOfConfig":"20"},{"size":2785,"mtime":1610166664789,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1fnuzjy",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/nihardarji/Desktop/Athlete-App/client/src/index.js",[],["80","81"],"/Users/nihardarji/Desktop/Athlete-App/client/src/reportWebVitals.js",[],"/Users/nihardarji/Desktop/Athlete-App/client/src/App.js",[],"/Users/nihardarji/Desktop/Athlete-App/client/src/store.js",[],"/Users/nihardarji/Desktop/Athlete-App/client/src/components/Home.js",["82"],"import React, { useEffect, useState } from 'react'\nimport { Container, Fab, Grid, makeStyles } from '@material-ui/core'\nimport AthletesList from './AthletesList'\nimport AthleteDetails from './AthleteDetails'\nimport { Add } from '@material-ui/icons'\nimport AddAthlete from './AddAthlete'\nimport { connect } from 'react-redux'\nimport { getAthletes } from '../actions/athleteActions'\n\nconst useStyles = makeStyles((theme) => ({\n    fab: {\n        position: 'absolute',\n        bottom: theme.spacing(5),\n        right: theme.spacing(5),\n    }\n}))\nconst Home = ({ athletes, getAthletes }) => {\n    const classes = useStyles()\n    const [open, setOpen] = useState(false)\n    const [uploadImg, setUploadImg] = useState(false)\n\n    const { athletesList } = athletes\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    useEffect(() => {\n        getAthletes()\n    }, [open, uploadImg])\n    return (\n        <Container>\n            <Grid container spacing={2}>\n                <Grid item xs={12} sm={6} >\n                    <AthletesList athletesList={athletesList} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <AthleteDetails uploadImg={uploadImg} setUploadImg={setUploadImg} />\n                </Grid>\n                <Fab className={classes.fab} onClick={handleClickOpen} color=\"primary\" aria-label=\"add\">\n                    <Add />\n                </Fab>\n                <AddAthlete open={open} handleClose={handleClose}/>\n            </Grid>\n        </Container>\n    )\n}\n\nconst mapStatesToProps = state => ({\n    athletes: state.athletes\n})\n\nexport default connect(mapStatesToProps, { getAthletes })(Home)\n","/Users/nihardarji/Desktop/Athlete-App/client/src/components/AthleteDetails.js",["83"],"import { Avatar, Box, Button, Card, CardActions, CardContent, Chip, Container, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { connect } from 'react-redux'\nimport { uploadImage } from '../actions/athleteActions';\nconst useStyles = makeStyles((theme)=>({\n    root: {\n      minWidth: 275,\n      backgroundColor:'#DBE5F5',\n      marginTop: theme.spacing(8),\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    },\n    margin: {\n        margin: theme.spacing(1),\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    center: {\n        margin: 'auto',\n    },\n    large: {\n        margin: 'auto',\n        width: theme.spacing(15),\n        height: theme.spacing(15),\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3)\n    }\n  }));\n  \n\nconst AthleteDetails = ({ athlete, uploadImage, setUploadImg, uploadImg}) => {\n    const classes = useStyles();\n    const handleChange = e => {\n        if(e.target.files[0]){\n            setUploadImg(!uploadImg)\n            uploadImage(athlete._id, e.target.files[0])\n        }\n    }\n    return (\n        <div>\n            <Box my={2} style={{fontSize: 25, color:'#2F3F6B'}} display=\"flex\" justifyContent=\"center\">Athlete Details</Box>\n            <Card style={{ height:'89vh', overflow: 'auto', margin: 10}}>\n                { athlete ?\n                    <Container>\n                        <Avatar className={classes.large} src={athlete.profileImage} /> \n                        <Box display='flex' justifyContent='center'><Button variant='contained'onChange={handleChange} component='label'>Edit Photo <input hidden type='file' /></Button></Box>\n                        <Card className={classes.root}>\n                            <CardContent>\n                            <Typography className={classes.margin}>Name :{athlete.name}</Typography>\n                            <Typography className={classes.margin}>Email : {athlete.email}</Typography>\n                            <Typography className={classes.margin}>Gender : {athlete.gender}</Typography>\n                            <Typography className={classes.margin}>Date of Birth : {new Date(athlete.dob).toDateString()}</Typography>\n                            <Typography className={classes.margin}>Location : {athlete.location}</Typography>\n                            <Typography className={classes.margin}>Team : {athlete.team}</Typography>\n                            \n                            <Typography className={classes.margin}>\n                                Interests : { athlete.interests}\n                            </Typography>\n                            <Typography className={classes.margin}>\n                                About : { athlete.about}\n                            </Typography>\n                            <Typography className={classes.margin}>\n                                Sports : {athlete.sports.map(sport => <Chip className={classes.margin} color='primary' size=\"small\" label={sport.name} />)}\n                            </Typography>\n                            </CardContent>\n                        </Card>\n                    </Container> : \n                    <Box \n                        display=\"flex\"\n                        alignItems=\"center\"\n                        justifyContent='center'\n                        mt={15}\n                    >\n                        <Box fontSize={20}> Click on the card to view Athlete Details </Box>\n                    </Box>\n                }\n            </Card>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    athlete: state.athletes.athlete\n})\nexport default connect(mapStateToProps, { uploadImage })(AthleteDetails)\n","/Users/nihardarji/Desktop/Athlete-App/client/src/components/AthletesList.js",[],"/Users/nihardarji/Desktop/Athlete-App/client/src/components/AddAthlete.js",[],"/Users/nihardarji/Desktop/Athlete-App/client/src/actions/athleteActions.js",[],"/Users/nihardarji/Desktop/Athlete-App/client/src/reducers/index.js",[],"/Users/nihardarji/Desktop/Athlete-App/client/src/components/AthleteForm.js",[],"/Users/nihardarji/Desktop/Athlete-App/client/src/components/AthleteItem.js",["84"],"import React, { useState } from 'react'\nimport { Avatar, Card, CardContent, CardHeader, IconButton, makeStyles, Typography } from '@material-ui/core'\nimport AddAthlete from './AddAthlete'\nimport { Edit } from '@material-ui/icons'\nimport { blue } from '@material-ui/core/colors'\nimport { setSportPlayer } from '../actions/athleteActions'\nimport { connect } from 'react-redux'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: 10\n    },\n    color:{\n        border: '1px solid',\n        margin: 10\n    },\n    content: {\n        cursor: 'pointer'\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    avatar: {\n        backgroundColor: blue[500],\n    },\n    fab : {\n        marginTop: 2,\n        marginRight: 2\n    }\n}))\n\nconst AthleteItem = ({ athlete, ath, setSportPlayer }) => {\n    const classes = useStyles()\n    const [open, setOpen] = useState(false)\n    const [editType, setEditType] = useState(true)\n    const handleClickOpen = (e) => {\n        e.preventDefault()\n        setOpen(true)\n        setSportPlayer(ath)\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const onCardClick = (e) => {\n        e.preventDefault()\n        setSportPlayer(ath)\n    }\n    return (\n        <Card className={athlete && ath._id === athlete._id ? classes.color : classes.root} variant=\"outlined\">\n            <CardHeader\n                className={classes.content}\n                onClick={onCardClick}\n                avatar={\n                <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                    {ath.name.charAt(0).toUpperCase()}\n                </Avatar>\n                }\n                action={\n                    <IconButton onClick={handleClickOpen} aria-label=\"settings\">\n                        <Edit />\n                    </IconButton>\n                }\n                title= {ath.name}\n                subheader= {ath.email}\n            />\n            <CardContent className={classes.content} onClick={onCardClick} >\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                    Gender: {ath.gender}\n                </Typography>\n                <Typography className={classes.title} color=\"textSecondary\">\n                    Date of Birth: {new Date(ath.dob).toDateString()}\n                </Typography>\n            </CardContent>\n\n            <AddAthlete open={open} handleClose={handleClose} editType={editType} athlete={ath}  />\n        </Card>\n    )\n}\n\nconst mapStateToProps = state => ({\n    athlete: state.athletes.athlete\n})\nexport default connect(mapStateToProps, { setSportPlayer })(AthleteItem)\n","/Users/nihardarji/Desktop/Athlete-App/client/src/actions/types.js",[],"/Users/nihardarji/Desktop/Athlete-App/client/src/reducers/athleteReducer.js",["85"],"import { ADD_ATHLETE, GET_ATHLETES, SET_ATHLETE, UPDATE_ATHLETE } from \"../actions/types\";\n\nconst initialState = {\n    athletesList: [],\n    athlete : null\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_ATHLETES:\n            return {\n                ...state,\n                athletesList: action.payload\n            }\n        \n        case SET_ATHLETE:\n            return {\n                ...state,\n                athlete: action.payload\n            }\n        \n        case ADD_ATHLETE:\n            return {\n                ...state,\n                athletesList: [ action.payload, ...state.athletesList]\n            }\n        \n        case UPDATE_ATHLETE:\n            return {\n                ...state,\n                athletesList: state.athletesList.map(a => a._id === action.payload._id ? action.payload : a),\n                athlete: action.payload\n            }\n        default:\n            return state\n    }\n}","/Users/nihardarji/Desktop/Athlete-App/client/src/components/Summary.js",[],"/Users/nihardarji/Desktop/Athlete-App/client/src/components/About.js",["86"],"import { makeStyles, TextField } from '@material-ui/core'\nimport React from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    }\n}))\nconst About = ({ val: [values, setValues]}) => {\n    const classes = useStyles()\n\n    const handleChange = (prop) => (event) => {\n        setValues({ ...values, [prop]: event.target.value })\n    }\n\n    const onFileChange = event => {\n        console.log('fileee', event.target.files[0])\n        setValues({...values, profileImage: event.target.files[0]})\n    }\n    return (\n        <div>\n            <TextField className={classes.margin} id=\"location\" value={values.location} onChange={handleChange('location')} label=\"Location\" fullWidth />\n            <TextField className={classes.margin} id=\"team\" value={values.team} onChange={handleChange('team')} label=\"Team\" fullWidth />\n            <TextField className={classes.margin} id=\"interests\" label=\"Interests\" helperText=\"Enter comma(,) seperated\" fullWidth value={values.interests} onChange={handleChange('interests')} />\n            <TextField\n                className={classes.margin}\n                id=\"about\"\n                label=\"About\"\n                multiline\n                rows={4}\n                fullWidth\n                value={values.about} onChange={handleChange('about')}\n            />\n        </div>\n    )\n}\n\nexport default About\n","/Users/nihardarji/Desktop/Athlete-App/client/src/components/BasicInformation.js",[],"/Users/nihardarji/Desktop/Athlete-App/client/src/utils/Sports.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":33,"column":8,"nodeType":"93","endLine":33,"endColumn":25,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":37,"nodeType":"97","messageId":"98","endLine":1,"endColumn":48},{"ruleId":"95","severity":1,"message":"99","line":43,"column":22,"nodeType":"97","messageId":"98","endLine":43,"endColumn":33},{"ruleId":"100","severity":1,"message":"101","line":8,"column":1,"nodeType":"102","endLine":37,"endColumn":2},{"ruleId":"95","severity":1,"message":"103","line":17,"column":11,"nodeType":"97","messageId":"98","endLine":17,"endColumn":23},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAthletes'. Either include it or remove the dependency array. If 'getAthletes' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["106"],"no-unused-vars","'CardActions' is defined but never used.","Identifier","unusedVar","'setEditType' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'onFileChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [getAthletes, open, uploadImg]",{"range":"109","text":"110"},[939,956],"[getAthletes, open, uploadImg]"]